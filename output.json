{
  "ast": [
    "root",
    [
      "module",
      "std/macros",
      ["imports"],
      ["exports"],
      [
        ["export", "pub", ["parameters", ["&body"]]],
        ["export", "`", ["parameters", ["&body"]]],
        ["export", "let", ["parameters", ["&body"]]],
        ["export", "var", ["parameters", ["&body"]]],
        ["export", "';'", ["parameters", ["&body"]]],
        ["export", "lambda", ["parameters", ["&body"]]],
        ["export", "'=>'", ["parameters", ["&body"]]],
        [
          "lambda-expr",
          ["definitions"],
          [
            "block",
            [
              "concat",
              ["quote", "parameters"],
              [
                "map",
                ["slice", "definitions", 1],
                [
                  "lambda-expr",
                  ["expr"],
                  [
                    "block",
                    [
                      "define",
                      "param-identifier-index",
                      ["if", ["==", ["length", "expr"], 3], 1, 2]
                    ],
                    [
                      "define",
                      "param-identifier",
                      ["extract", "expr", "param-identifier-index"]
                    ],
                    [
                      "define",
                      "type",
                      ["extract", "expr", ["+", "param-identifier-index", 1]]
                    ],
                    ["quote", "$param-identifier", "$type"]
                  ]
                ]
              ]
            ]
          ]
        ],
        ["export", "fn", ["parameters", ["&body"]]],
        [
          "export",
          "def-wasm-operator",
          ["parameters", ["op", "wasm-fn", "arg-type", "return-type"]]
        ],
        ["export", "extern-fn", ["parameters", ["&body"]]],
        ["export", "type", ["parameters", ["&body"]]]
      ]
    ],
    [
      "module",
      "std/string",
      ["imports", ["std/macros", "***"]],
      ["exports"],
      [
        ["define-type", "String", "i32"],
        [
          "define-extern-function",
          "alloc-string",
          ["namespace", "strings"],
          ["parameters"],
          ["return-type", "String"]
        ],
        [
          "define-extern-function",
          "de-alloc-string",
          ["namespace", "strings"],
          ["parameters", ["str", "String"]],
          ["return-type", "void"]
        ],
        [
          "define-extern-function",
          "str-len",
          ["namespace", "strings"],
          ["parameters", ["str", "String"]],
          ["return-type", "i32"]
        ],
        [
          "define-extern-function",
          "get-char-code-from-string",
          ["namespace", "strings"],
          ["parameters", ["charIndex", "i32"], ["str", "String"]],
          ["return-type", "i32"]
        ],
        [
          "define-extern-function",
          "add-char-code-to-string",
          ["namespace", "strings"],
          ["parameters", ["char", "i32"], ["str", "String"]],
          ["return-type", "void"]
        ],
        [
          "define-extern-function",
          "print-str",
          ["namespace", "strings"],
          ["parameters", ["str", "String"]],
          ["return-type", "void"]
        ],
        [
          "define-extern-function",
          "str-equals",
          ["namespace", "strings"],
          ["parameters", ["a", "String"], ["b", "String"]],
          ["return-type", "void"]
        ],
        [
          "define-extern-function",
          "str-starts-with",
          ["namespace", "strings"],
          ["parameters", ["str", "String"], ["startsWith", "String"]],
          ["return-type", "void"]
        ],
        [
          "define-extern-function",
          "str-ends-with",
          ["namespace", "strings"],
          ["parameters", ["str", "String"], ["endsWith", "String"]],
          ["return-type", "void"]
        ],
        [
          "define-extern-function",
          "str-includes",
          ["namespace", "strings"],
          ["parameters", ["str", "String"], ["includes", "String"]],
          ["return-type", "void"]
        ],
        [
          "define-extern-function",
          "str-test",
          ["namespace", "strings"],
          [
            "parameters",
            ["str", "String"],
            ["regex", "String"],
            ["flags", "String"]
          ],
          ["return-type", "void"]
        ],
        ["export", "string", ["parameters", ["str"]]]
      ]
    ],
    [
      "module",
      "std/index",
      ["imports", ["std/macros", "***"], ["std/string", "***"]],
      ["exports"],
      [
        [
          "define-function",
          "'<'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "lt_s"], ["left", "right"]]]
        ],
        ["export", "'<'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'>'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "gt_s"], ["left", "right"]]]
        ],
        ["export", "'>'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'<='",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "le_s"], ["left", "right"]]]
        ],
        ["export", "'<='", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'>='",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "ge_s"], ["left", "right"]]]
        ],
        ["export", "'>='", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'=='",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "eq"], ["left", "right"]]]
        ],
        ["export", "'=='", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'and'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "'and'"], ["left", "right"]]]
        ],
        ["export", "'and'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'or'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "'or'"], ["left", "right"]]]
        ],
        ["export", "'or'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'xor'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "'xor'"], ["left", "right"]]]
        ],
        ["export", "'xor'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'not'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "ne"], ["left", "right"]]]
        ],
        ["export", "'not'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'+'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "add"], ["left", "right"]]]
        ],
        ["export", "'+'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'-'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "sub"], ["left", "right"]]]
        ],
        ["export", "'-'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'*'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "mul"], ["left", "right"]]]
        ],
        ["export", "'*'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'/'",
          ["parameters", ["left", "i32"], ["right", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["i32", "div_s"], ["left", "right"]]]
        ],
        ["export", "'/'", ["parameters", ["left", "i32"], ["right", "i32"]]],
        [
          "define-function",
          "'<'",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["f32", "lt"], ["left", "right"]]]
        ],
        ["export", "'<'", ["parameters", ["left", "f32"], ["right", "f32"]]],
        [
          "define-function",
          "'>'",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["f32", "gt"], ["left", "right"]]]
        ],
        ["export", "'>'", ["parameters", ["left", "f32"], ["right", "f32"]]],
        [
          "define-function",
          "'<='",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["f32", "le"], ["left", "right"]]]
        ],
        ["export", "'<='", ["parameters", ["left", "f32"], ["right", "f32"]]],
        [
          "define-function",
          "'>='",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["f32", "ge"], ["left", "right"]]]
        ],
        ["export", "'>='", ["parameters", ["left", "f32"], ["right", "f32"]]],
        [
          "define-function",
          "'=='",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["f32", "eq"], ["left", "right"]]]
        ],
        ["export", "'=='", ["parameters", ["left", "f32"], ["right", "f32"]]],
        [
          "define-function",
          "'not'",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "i32"],
          ["block", ["binaryen-mod", ["f32", "ne"], ["left", "right"]]]
        ],
        ["export", "'not'", ["parameters", ["left", "f32"], ["right", "f32"]]],
        [
          "define-function",
          "'+'",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "f32"],
          ["block", ["binaryen-mod", ["f32", "add"], ["left", "right"]]]
        ],
        ["export", "'+'", ["parameters", ["left", "f32"], ["right", "f32"]]],
        [
          "define-function",
          "'-'",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "f32"],
          ["block", ["binaryen-mod", ["f32", "sub"], ["left", "right"]]]
        ],
        ["export", "'-'", ["parameters", ["left", "f32"], ["right", "f32"]]],
        [
          "define-function",
          "'*'",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "f32"],
          ["block", ["binaryen-mod", ["f32", "mul"], ["left", "right"]]]
        ],
        ["export", "'*'", ["parameters", ["left", "f32"], ["right", "f32"]]],
        [
          "define-function",
          "'/'",
          ["parameters", ["left", "f32"], ["right", "f32"]],
          ["variables"],
          ["return-type", "f32"],
          ["block", ["binaryen-mod", ["f32", "div"], ["left", "right"]]]
        ],
        ["export", "'/'", ["parameters", ["left", "f32"], ["right", "f32"]]]
      ]
    ],
    [
      "module",
      "src/example",
      ["imports", ["std/index", "***"], ["std/index", "***"]],
      ["exports"],
      [
        [
          "define-function",
          "fib",
          ["parameters", ["n", "i32"]],
          ["variables"],
          ["return-type", "i32"],
          [
            "block",
            [
              "if",
              ["<", "n", 2],
              "n",
              ["+", ["fib", ["-", "n", 1]], ["fib", ["-", "n", 2]]]
            ]
          ]
        ],
        ["export", "fib", ["parameters", ["n", "i32"]]],
        [
          "define-function",
          "fib",
          ["parameters", ["n", "f32"]],
          ["variables"],
          ["return-type", "f32"],
          [
            "block",
            [
              "if",
              ["<", "n", "/float2.0"],
              "n",
              [
                "+",
                ["fib", ["-", "n", "/float1.0"]],
                ["fib", ["-", "n", "/float2.0"]]
              ]
            ]
          ]
        ],
        ["export", "fib", ["parameters", ["n", "f32"]]],
        [
          "define-function",
          "main",
          ["parameters"],
          ["variables", ["index", "String"]],
          ["return-type", "f32"],
          [
            "block",
            [
              "print-str",
              [
                "block",
                [
                  "define",
                  ["typed-parameter", "index", "String"],
                  ["alloc-string"]
                ],
                ["add-char-code-to-string", 34, "index"],
                ["add-char-code-to-string", 72, "index"],
                ["add-char-code-to-string", 101, "index"],
                ["add-char-code-to-string", 108, "index"],
                ["add-char-code-to-string", 108, "index"],
                ["add-char-code-to-string", 111, "index"],
                ["add-char-code-to-string", 44, "index"],
                ["add-char-code-to-string", 32, "index"],
                ["add-char-code-to-string", 119, "index"],
                ["add-char-code-to-string", 111, "index"],
                ["add-char-code-to-string", 114, "index"],
                ["add-char-code-to-string", 108, "index"],
                ["add-char-code-to-string", 100, "index"],
                ["add-char-code-to-string", 33, "index"],
                ["add-char-code-to-string", 34, "index"],
                "index"
              ]
            ],
            ["fib", "/float10.0"]
          ]
        ]
      ]
    ]
  ],
  "moduleId": "src/example",
  "path": "/Users/drew/projects/dream/example.dm",
  "srcPath": "/Users/drew/projects/dream",
  "isRoot": true,
  "workingDir": "/Users/drew/projects/dream",
  "imports": [
    [
      {
        "moduleId": "std/index",
        "path": "/Users/drew/projects/dream/std/index.dm",
        "srcPath": "",
        "isRoot": false,
        "workingDir": "/Users/drew/projects/dream/std",
        "imports": [
          [
            {
              "moduleId": "std/macros",
              "path": "/Users/drew/projects/dream/std/macros.dm",
              "srcPath": "",
              "isRoot": false,
              "workingDir": "/Users/drew/projects/dream/std",
              "imports": []
            },
            "***"
          ],
          [
            {
              "moduleId": "std/string",
              "path": "/Users/drew/projects/dream/std/string.dm",
              "srcPath": "",
              "isRoot": false,
              "workingDir": "/Users/drew/projects/dream/std",
              "imports": [
                [
                  {
                    "moduleId": "std/macros",
                    "path": "/Users/drew/projects/dream/std/macros.dm",
                    "srcPath": "",
                    "isRoot": false,
                    "workingDir": "/Users/drew/projects/dream/std",
                    "imports": []
                  },
                  "***"
                ]
              ]
            },
            "***"
          ]
        ]
      },
      "***"
    ],
    [
      {
        "moduleId": "std/index",
        "path": "/Users/drew/projects/dream/std/index.dm",
        "srcPath": "/Users/drew/projects/dream",
        "isRoot": true,
        "workingDir": "/Users/drew/projects/dream/std",
        "imports": []
      },
      "***"
    ]
  ]
}
