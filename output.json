Debugger listening on ws://127.0.0.1:9229/739c751b-5cad-43b2-bfcc-78fd42a43804
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
New body
[
  "macro",
  [
    "`",
    "&body"
  ],
  [
    "quote",
    "quote",
    "$@&body"
  ]
]
New body
[
  "macro",
  [
    "let",
    "&body"
  ],
  [
    "define",
    "equals-expr",
    [
      "extract",
      "&body",
      0
    ]
  ],
  [
    "quote",
    "define",
    [
      "$",
      "macro-expand",
      [
        "extract",
        "equals-expr",
        1
      ]
    ],
    [
      "$",
      "macro-expand",
      [
        "extract",
        "equals-expr",
        2
      ]
    ]
  ]
]
New body
[
  "macro",
  [
    "var",
    "&body"
  ],
  [
    "define",
    "equals-expr",
    [
      "extract",
      "&body",
      0
    ]
  ],
  [
    "quote",
    "define-mut",
    [
      "$",
      "extract",
      "equals-expr",
      1
    ],
    [
      "$",
      "extract",
      "equals-expr",
      2
    ]
  ]
]
New body
[
  "macro",
  [
    "lambda",
    "&body"
  ],
  [
    "quote",
    "lambda-expr",
    [
      "$",
      "macro-expand",
      "&body"
    ]
  ]
]
New body
[
  "macro",
  [
    "'=>'",
    "&body"
  ],
  [
    "quote",
    "lambda",
    [
      "$@",
      "&body"
    ]
  ]
]
New body
[
  "macro",
  [
    "';'",
    "&body"
  ],
  [
    "define",
    "func",
    [
      "block",
      [
        "macro-expand",
        [
          "extract",
          "&body",
          0
        ]
      ]
    ]
  ],
  [
    "define",
    "block-list",
    [
      "block",
      [
        "macro-expand",
        [
          "extract",
          "&body",
          1
        ]
      ]
    ]
  ],
  [
    "if",
    [
      "is-list",
      "func"
    ],
    [
      "concat",
      "func",
      [
        "slice",
        "block-list",
        1
      ]
    ],
    [
      "concat",
      [
        "`",
        "$func"
      ],
      [
        "slice",
        "block-list",
        1
      ]
    ]
  ]
]
New body
[
  "macro",
  [
    "fn",
    "&body"
  ],
  [
    "define",
    "definitions",
    [
      "block",
      [
        "extract",
        "&body",
        0
      ]
    ]
  ],
  [
    "define",
    "identifier",
    [
      "block",
      [
        "extract",
        "definitions",
        0
      ]
    ]
  ],
  [
    "define",
    "params",
    [
      "block",
      [
        ";",
        [
          "concat",
          [
            "array",
            "\"parameters\""
          ]
        ],
        [
          "block",
          [
            "map",
            [
              "slice",
              "definitions",
              1
            ],
            [
              "=>",
              [
                "expr"
              ],
              [
                "block",
                [
                  "let",
                  [
                    "=",
                    "param-identifier-index",
                    [
                      "block",
                      [
                        "if",
                        [
                          "==",
                          [
                            "length",
                            "expr"
                          ],
                          3
                        ],
                        1,
                        2
                      ]
                    ]
                  ]
                ],
                [
                  "let",
                  [
                    "=",
                    "param-identifier",
                    [
                      "block",
                      [
                        "extract",
                        "expr",
                        "param-identifier-index"
                      ]
                    ]
                  ]
                ],
                [
                  "let",
                  [
                    "=",
                    "type",
                    [
                      "block",
                      [
                        "extract",
                        "expr",
                        [
                          "+",
                          "param-identifier-index",
                          1
                        ]
                      ]
                    ]
                  ]
                ],
                [
                  "`",
                  "param-identifier",
                  "$type"
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ],
  [
    "define",
    "type-arrow-index",
    [
      "block",
      [
        ";",
        "if",
        [
          "block",
          [
            "==",
            [
              "extract",
              "&body",
              1
            ],
            "\"->\""
          ],
          1,
          [
            "if",
            [
              "==",
              [
                "extract",
                "&body",
                2
              ],
              "\"->\""
            ],
            2,
            -1
          ]
        ]
      ]
    ]
  ],
  [
    "define",
    "return-type",
    [
      "block",
      [
        ";",
        "quote",
        [
          "block",
          "return-type",
          [
            "$",
            "if",
            [
              ">",
              "type-arrow-index",
              -1
            ],
            [
              "extract",
              "&body",
              [
                "+",
                "type-arrow-index",
                1
              ]
            ],
            [
              "`"
            ]
          ]
        ]
      ]
    ]
  ],
  [
    "define",
    "expressions",
    [
      "block",
      [
        ";",
        "macro-expand",
        [
          "block",
          [
            "if",
            [
              ">",
              "type-arrow-index",
              -1
            ],
            [
              "slice",
              "&body",
              [
                "+",
                "type-arrow-index",
                2
              ]
            ],
            [
              "slice",
              "&body",
              1
            ]
          ]
        ]
      ]
    ]
  ],
  [
    "define",
    "extract-variables",
    [
      "block",
      [
        "=>",
        [
          "exprs"
        ],
        [
          "block",
          [
            "reduce",
            "exprs",
            [
              "array"
            ],
            [
              "=>",
              [
                "vars",
                "expr"
              ],
              [
                "block",
                [
                  "if",
                  [
                    "is-list",
                    "expr"
                  ],
                  [
                    "if",
                    [
                      "==",
                      [
                        "or",
                        [
                          "==",
                          [
                            "extract",
                            "expr",
                            0
                          ],
                          "\"define-mut\""
                        ],
                        [
                          "extract",
                          "expr",
                          0
                        ]
                      ],
                      "\"define\""
                    ],
                    [
                      "block",
                      [
                        "push",
                        "vars",
                        [
                          "array",
                          [
                            [
                              "extract",
                              "expr",
                              1
                            ],
                            [
                              "extract",
                              "expr",
                              2
                            ]
                          ]
                        ]
                      ],
                      "vars"
                    ],
                    [
                      "concat",
                      "vars",
                      [
                        "extract-variables",
                        "expr"
                      ]
                    ]
                  ],
                  "vars"
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ],
  [
    "define",
    "variables",
    [
      "block",
      [
        "concat",
        [
          "array",
          "variables"
        ],
        [
          "extract-variables",
          "expressions"
        ]
      ]
    ]
  ],
  [
    "quote",
    "define-function",
    "$identifier",
    "$params",
    "$variables",
    "$return-type",
    [
      "$",
      [
        "concat",
        [
          "array",
          "\"block\""
        ],
        "expressions"
      ]
    ]
  ]
]
New body
[
  "macro",
  [
    "pub",
    "&body"
  ],
  [
    "define",
    "expanded",
    [
      "block",
      [
        "macro-expand",
        "&body"
      ]
    ]
  ],
  [
    "quote",
    "block",
    "$expanded",
    [
      "export",
      [
        "$",
        "extract",
        "expanded",
        1
      ]
    ]
  ]
]
New body
[
  "macro",
  [
    "def-wasm-operator",
    "op",
    "wasm-fn",
    "arg-type",
    "return-type"
  ],
  [
    "define",
    "expanded",
    [
      "block",
      [
        ";",
        "macro-expand",
        [
          "block",
          [
            "`",
            "pub",
            "fn",
            [
              "$op",
              [
                "typed-parameter",
                "left",
                "$arg-type"
              ],
              [
                "typed-parameter",
                "right",
                "$arg-type"
              ]
            ],
            "->",
            "$return-type",
            [
              "binaryen-mod",
              [
                "$arg-type",
                "$wasm-fn"
              ],
              [
                "left",
                "right"
              ]
            ]
          ]
        ]
      ]
    ]
  ]
]
Waiting for the debugger to disconnect...
