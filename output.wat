(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $f32_f32_=>_i32 (func (param f32 f32) (result i32)))
 (type $f32_f32_=>_f32 (func (param f32 f32) (result f32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (memory $0 1 150)
 (export "buffer" (memory $0))
 (export "fib#7567" (func $fib#7567))
 (export "<#7796" (func $<#7796))
 (export ">#7826" (func $>#7826))
 (export "<=#7856" (func $<=#7856))
 (export ">=#7886" (func $>=#7886))
 (export "==#7916" (func $==#7916))
 (export "and#7946" (func $and#7946))
 (export "or#7976" (func $or#7976))
 (export "xor#8006" (func $xor#8006))
 (export "not#8036" (func $not#8036))
 (export "+#8066" (func $+#8066))
 (export "-#8096" (func $-#8096))
 (export "*#8126" (func $*#8126))
 (export "/#8156" (func $/#8156))
 (export "<#8186" (func $<#8186))
 (export ">#8216" (func $>#8216))
 (export "<=#8246" (func $<=#8246))
 (export ">=#8276" (func $>=#8276))
 (export "==#8306" (func $==#8306))
 (export "not#8336" (func $not#8336))
 (export "+#8366" (func $+#8366))
 (export "-#8396" (func $-#8396))
 (export "*#8426" (func $*#8426))
 (export "/#8456" (func $/#8456))
 (func $fib#7567 (param $0 i32) (result i32)
  (block (result i32)
   (if (result i32)
    (call $<=#7856
     (local.get $0)
     (i32.const 1)
    )
    (local.get $0)
    (call $+#8066
     (call $fib#7567
      (call $-#8096
       (local.get $0)
       (i32.const 1)
      )
     )
     (call $fib#7567
      (call $-#8096
       (local.get $0)
       (i32.const 2)
      )
     )
    )
   )
  )
 )
 (func $<#7796 (param $0 i32) (param $1 i32) (result i32)
  (i32.lt_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $>#7826 (param $0 i32) (param $1 i32) (result i32)
  (i32.gt_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $<=#7856 (param $0 i32) (param $1 i32) (result i32)
  (i32.le_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $>=#7886 (param $0 i32) (param $1 i32) (result i32)
  (i32.ge_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $==#7916 (param $0 i32) (param $1 i32) (result i32)
  (i32.eq
   (local.get $0)
   (local.get $1)
  )
 )
 (func $and#7946 (param $0 i32) (param $1 i32) (result i32)
  (i32.and
   (local.get $0)
   (local.get $1)
  )
 )
 (func $or#7976 (param $0 i32) (param $1 i32) (result i32)
  (i32.or
   (local.get $0)
   (local.get $1)
  )
 )
 (func $xor#8006 (param $0 i32) (param $1 i32) (result i32)
  (i32.xor
   (local.get $0)
   (local.get $1)
  )
 )
 (func $not#8036 (param $0 i32) (param $1 i32) (result i32)
  (i32.ne
   (local.get $0)
   (local.get $1)
  )
 )
 (func $+#8066 (param $0 i32) (param $1 i32) (result i32)
  (i32.add
   (local.get $0)
   (local.get $1)
  )
 )
 (func $-#8096 (param $0 i32) (param $1 i32) (result i32)
  (i32.sub
   (local.get $0)
   (local.get $1)
  )
 )
 (func $*#8126 (param $0 i32) (param $1 i32) (result i32)
  (i32.mul
   (local.get $0)
   (local.get $1)
  )
 )
 (func $/#8156 (param $0 i32) (param $1 i32) (result i32)
  (i32.div_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $<#8186 (param $0 f32) (param $1 f32) (result i32)
  (f32.lt
   (local.get $0)
   (local.get $1)
  )
 )
 (func $>#8216 (param $0 f32) (param $1 f32) (result i32)
  (f32.gt
   (local.get $0)
   (local.get $1)
  )
 )
 (func $<=#8246 (param $0 f32) (param $1 f32) (result i32)
  (f32.le
   (local.get $0)
   (local.get $1)
  )
 )
 (func $>=#8276 (param $0 f32) (param $1 f32) (result i32)
  (f32.ge
   (local.get $0)
   (local.get $1)
  )
 )
 (func $==#8306 (param $0 f32) (param $1 f32) (result i32)
  (f32.eq
   (local.get $0)
   (local.get $1)
  )
 )
 (func $not#8336 (param $0 f32) (param $1 f32) (result i32)
  (f32.ne
   (local.get $0)
   (local.get $1)
  )
 )
 (func $+#8366 (param $0 f32) (param $1 f32) (result f32)
  (f32.add
   (local.get $0)
   (local.get $1)
  )
 )
 (func $-#8396 (param $0 f32) (param $1 f32) (result f32)
  (f32.sub
   (local.get $0)
   (local.get $1)
  )
 )
 (func $*#8426 (param $0 f32) (param $1 f32) (result f32)
  (f32.mul
   (local.get $0)
   (local.get $1)
  )
 )
 (func $/#8456 (param $0 f32) (param $1 f32) (result f32)
  (f32.div
   (local.get $0)
   (local.get $1)
  )
 )
)
