use std::macros::all

macro binaryen_gc_call(func, args)
  ` binaryen func: $func namespace: gc args: $args

macro bin_type_to_heap_type(type)
  // binaryen_gc_call(modBinaryenTypeToHeapType, ` [BnrType<($type)>])
  ` binaryen
    func: modBinaryenTypeToHeapType
    namespace: gc
    args: [BnrType<($type)>]

pub fn new_fixed_array<T>(size: i32) -> FixedArray<T>
  binaryen_gc_call(arrayNew, [bin_type_to_heap_type(FixedArray<T>), size])

pub fn get<T>(arr: FixedArray<T>, index: i32) -> T
  binaryen_gc_call(
    arrayGet,
    [arr, index, BnrType<T>, BnrConst(false)]
  )

pub fn set<T>(arr: FixedArray<T>, index: i32, value: T) -> FixedArray<T>
  binaryen_gc_call(arraySet, [arr, index, value])
  arr
